#!/bin/bash

# Pre-commit hook for gerberdump
# Ensures code is properly formatted with cargo fmt

set -e

echo "🔍 Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if cargo is available
if ! command -v cargo &> /dev/null; then
    echo -e "${RED}❌ Cargo not found! Please install Rust and Cargo.${NC}"
    exit 1
fi

# Check if we're in a Rust project
if [ ! -f "Cargo.toml" ]; then
    echo -e "${RED}❌ Cargo.toml not found! This doesn't appear to be a Rust project.${NC}"
    exit 1
fi

echo -e "${BLUE}📋 Checking code formatting with cargo fmt...${NC}"

# Check if cargo fmt makes any changes
if ! cargo fmt -- --check; then
    echo -e "${RED}❌ Code formatting issues detected!${NC}"
    echo -e "${YELLOW}🔧 Automatically formatting your code...${NC}"
    
    # Format the code
    cargo fmt
    
    echo -e "${GREEN}✅ Code has been formatted!${NC}"
    echo -e "${YELLOW}📝 Please review the changes and commit again.${NC}"
    echo ""
    echo -e "${BLUE}Formatted files:${NC}"
    
    # Show which Rust files were staged
    staged_rust_files=$(git diff --name-only --cached | grep '\.rs$' || true)
    if [ -n "$staged_rust_files" ]; then
        echo "$staged_rust_files" | sed 's/^/  /'
    else
        echo "  No Rust files in staging area"
    fi
    
    echo ""
    echo -e "${YELLOW}💡 Tip: Run 'git add .' to stage the formatted files and commit again.${NC}"
    
    exit 1
fi

echo -e "${GREEN}✅ Code formatting is correct!${NC}"

# Optional: Check for common issues
echo -e "${BLUE}🔍 Running cargo check...${NC}"
if ! cargo check --quiet; then
    echo -e "${RED}❌ Cargo check failed! Please fix the issues before committing.${NC}"
    exit 1
fi

echo -e "${GREEN}✅ Cargo check passed!${NC}"

# Optional: Run clippy for additional linting
if command -v cargo-clippy &> /dev/null || cargo clippy --version &> /dev/null; then
    echo -e "${BLUE}📎 Running cargo clippy...${NC}"
    if ! cargo clippy -- -D warnings; then
        echo -e "${RED}❌ Clippy found issues! Please fix them before committing.${NC}"
        exit 1
    fi
    echo -e "${GREEN}✅ Clippy checks passed!${NC}"
else
    echo -e "${YELLOW}⚠️  Clippy not available, skipping lint checks.${NC}"
fi

echo -e "${GREEN}🎉 All pre-commit checks passed!${NC}" 